[project]
name = "youtube-presentation-extractor"
version = "1.0.0"
description = "Extract presentations from YouTube videos with screenshots and synchronized transcripts"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "YouTube Presentation Extractor", email = "user@example.com"}
]
keywords = ["youtube", "presentation", "extractor", "transcript", "screenshots"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Markup :: HTML",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "yt-dlp>=2023.12.30",
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "scikit-image>=0.21.0",
    "scenedetect>=0.6.2",
    "jinja2>=3.1.0",
    "pytesseract>=0.3.10",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "srt>=3.5.0",
    "weasyprint>=60.0",
    "reportlab>=4.0.0",
    "anthropic>=0.18.0,<0.19.0",
    "httpx>=0.24.0,<0.26.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
youtube-extractor = "main:main"
youtube-extractor-batch = "batch_processor:main"

[project.urls]
Homepage = "https://github.com/user/youtube-presentation-extractor"
Repository = "https://github.com/user/youtube-presentation-extractor"
Documentation = "https://github.com/user/youtube-presentation-extractor#readme"
Issues = "https://github.com/user/youtube-presentation-extractor/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2",
    "PIL.*",
    "skimage.*",
    "scenedetect.*",
    "weasyprint.*",
    "reportlab.*",
]
ignore_missing_imports = true 